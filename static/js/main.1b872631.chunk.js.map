{"version":3,"sources":["components/Navigation/Navigation.module.css","components/_shared/Layout/Layout.module.css","components/Login/Login.module.css","components/_shared/Inputs/Inputs.module.css","api/config.js","store/statusTypes.js","api/hooks/useListener.js","api/actionTypes.js","api/converters/category.js","api/converters/product.js","api/converters/grocery.js","api/converters/color.js","store/actions/uiActions.js","components/Navigation/ActionIcon.js","components/Navigation/MenuToggle.js","components/Navigation/NavMenu.js","store/actions/userActions.js","store/actions/categoriesActions.js","store/actions/productsActions.js","store/actions/groceriesActions.js","components/Navigation/Navigation.js","components/_shared/Layout/ActionsContainer.js","components/_shared/Layout/hooks/usePageLayout.js","components/_shared/Inputs/hooks/useTextInput.js","components/_shared/Search/hooks/useSearch.js","components/_shared/Inputs/TextInput.js","components/_shared/Layout/FlexRow.js","components/_shared/Layout/InlineIcon.js","components/_shared/Search/Search.js","components/_shared/SwipeableList/contants.js","assets/simpleReducer.js","components/_shared/SwipeableList/SwipeableListItem.js","components/_shared/SwipeableList/SwipeableList.js","components/_shared/Layout/InlineButton.js","components/_shared/Inputs/ColorPicker.js","components/_shared/Inputs/ColorItem.js","components/Categories/CategoryForm.js","components/Categories/Categories.js","components/_shared/Layout/Notification.js","components/_shared/Inputs/SuggestionInput.js","components/_shared/Layout/ActionsHeader.js","components/Products/ProductForm.js","components/Groceries/AddGroceryForm.js","components/Groceries/Groceries.js","components/Login/hooks/useLogin.js","components/Login/Login.js","components/Products/Products.js","components/Routes.js","App.js","api/hooks/useInitializer.js","reportWebVitals.js","store/reducers/uiReducer.js","store/reducers/userReducer.js","store/reducers/categoriesReducer.js","store/reducers/productsReducer.js","store/reducers/groceriesReducer.js","store/reducers/colorsReducer.js","store/store.js","index.js","components/_shared/SwipeableList/SwipeableList.module.css"],"names":["module","exports","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","IDLE","FETCH_START","FETCH_COMPLETE","FETCH_FAILED","ADD_START","ADD_COMPLETE","ADD_FAILED","DELETE_START","DELETE_COMPLETE","DELETE_FAILED","useListener","collection","userId","useSelector","s","user","dispatch","useDispatch","cancelCallback","React","useRef","cancel","current","listen","converter","actionTypes","orderBy","predicate","collectionRef","firebase","firestore","doc","where","type","SET","payload","SET_STATUS","console","log","withConverter","onSnapshot","snapshot","docChanges","forEach","change","ADD","data","UPDATE","DELETE","id","error","isActive","ACTION_TYPES","Category","name","description","colorId","colorHex","this","categoryConverter","toFirestore","category","productCount","color","hex","fromFirestore","Product","categoryId","productConverter","product","Grocery","productId","productName","groceryConverter","grocery","Color","available","colorConverter","setMenuActive","setFormActive","setSearchActive","setActionsHeight","createNotification","ActionIcon","props","icon","onClick","createElement","className","styles","actionIcon_active","actionIcon","propTypes","PropTypes","func","isRequired","bool","MenuToggle","currentPage","menuToggle_active","menuToggle","hamburger","line","NavMenu","items","currentLocation","signOut","LogoutLink","logoutLink","navLinks","Object","keys","map","n","navLink_active","navLink","to","navMenu_active","navMenu","setUserId","setUserStatus","setCategoriesStatus","setProductsStatus","setGroceriesStatus","LINKS","Navigation","ui","menuActive","searchActive","formActive","location","useLocation","history","useHistory","useLayoutEffect","setTimeout","useEffect","pathname","push","topnav_hidden","topnav","actions_hidden","actions","FaSearch","FaPlusCircle","ActionsContainer","children","actionsHeight","height","actionsContainer","style","minHeight","usePageLayout","searchHeight","formHeight","updateHeight","newHeight","useTextInput","initialValue","min","max","pattern","useState","value","setValue","setError","onChange","newValue","validate","length","test","reset","useSearch","results","setResults","input","filter","i","toUpperCase","includes","TextInput","placeholder","e","target","textInput","FlexRow","row","InlineIcon","hasError","inlineIcon_error","inlineIcon_active","inlineIcon","Search","defaultProps","DIRECTION","simpleReducer","state","newState","initialState","direction","trigger","swipeStart","isSwiping","SwipeableListItem","item","onLeftSwipe","onRightSwipe","triggerAt","useReducer","setState","contentRef","itemRef","bgRef","triggerThreshold","offsetWidth","bg_left","bg_right","bg","onSwipeStart","clientX","clientY","content_active","onSwipeMove","offsetX","offsetY","absX","Math","abs","absY","setContentPosition","setBackgroundOpacity","toFixed","onSwipeEnd","removeListItem","offset","transform","opacity","listItem_remove","content_reset","content","swipeEvents","onTouchStart","changedTouches","onTouchMove","onTouchEnd","onTouchCancel","onMouseDownCapture","onMouseMove","onMouseUp","onMouseLeave","listItem","ref","bgText","bgIcon_wobble","bgIcon","contentText","categoryColor","background","SwipeableList","list","InlineButton","disabled","inlineBtn","ColorPicker","colorPicker","ColorItem","colorItem_active","colorItem","scrollIntoView","behaviour","inline","block","CategoryForm","callback","initialCategoryName","categories","categoriesStatus","colors","colorsStatus","categoryName","setColorId","colorError","setColorError","availableColors","setAvailableColors","c","setIdle","loading","FaTag","availableColor","find","categoryNameExists","addCategory","a","batch","userRef","categoriesRef","set","colorsRef","update","commit","then","catch","err","addCategoryAsync","FaPlus","FaPalette","Categories","search","key","delete","deleteCategoryAsync","Notification","notificationMessage","display","notificationError","notification","DEFAULT_DELAY","size","notificationIcon","SuggestionInput","options","ActionsHeader","onBack","actionsHeader","FaChevronLeft","headerContent","ProductForm","initialProductName","products","productsStatus","formStep","setFormStep","saving","FaShoppingBag","productError","categoryError","categoryFound","productExists","p","addProduct","add","addProductAsync","AddGroceryForm","groceries","groceriesStatus","productFound","groceryExists","g","addGrocery","addGroceryAsync","FaComment","Groceries","groceryId","deleteGroceryAsync","useLogin","userStatus","userName","nameError","setNameError","signIn","toLowerCase","get","res","docs","signInUserAsync","onLogin","preventDefault","onAnonymousLogin","Login","login","header","title","subTitle","loginForm","onSubmit","label","FaUser","FaCheck","anonymousBtn","footer","socialIcons","href","rel","Products","deleteProductAsync","Routes","component","path","App","authError","setAuthError","categoryListener","productListener","colorListener","groceryListener","cancelListeners","apps","initializeApp","auth","currentUser","signInAnonymously","useInitializer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","assign","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b872631.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"topnav\":\"Navigation_topnav__ZCkvd\",\"topnav_hidden\":\"Navigation_topnav_hidden__2RKXb Navigation_topnav__ZCkvd\",\"menuToggle\":\"Navigation_menuToggle__3If__\",\"menuToggle_active\":\"Navigation_menuToggle_active__ztyzY Navigation_menuToggle__3If__\",\"currentPage\":\"Navigation_currentPage__2tX-E\",\"hamburger\":\"Navigation_hamburger__2Wmk2\",\"line\":\"Navigation_line__2lTL6\",\"navMenu\":\"Navigation_navMenu__1_q_F\",\"navMenu_active\":\"Navigation_navMenu_active__20FoP Navigation_navMenu__1_q_F\",\"navLink\":\"Navigation_navLink__VWl9e\",\"navLink_active\":\"Navigation_navLink_active__699WP Navigation_navLink__VWl9e\",\"logoutLink\":\"Navigation_logoutLink__2IrYY\",\"actions\":\"Navigation_actions__3B9Vv\",\"actions_hidden\":\"Navigation_actions_hidden__2yXp_ Navigation_actions__3B9Vv\",\"actionIcon\":\"Navigation_actionIcon__j17Kf\",\"actionIcon_active\":\"Navigation_actionIcon_active__1k1es Navigation_actionIcon__j17Kf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionsContainer\":\"Layout_actionsContainer__3WHtk\",\"scale-in-actions\":\"Layout_scale-in-actions__39CBZ\",\"actionsHeader\":\"Layout_actionsHeader__1o3Vc\",\"headerContent\":\"Layout_headerContent__2wZ58\",\"row\":\"Layout_row__2GTkH\",\"inlineBtn\":\"Layout_inlineBtn__26gd5\",\"inlineIcon\":\"Layout_inlineIcon__3mLjc\",\"inlineIcon_active\":\"Layout_inlineIcon_active__3Pkwa Layout_inlineIcon__3mLjc\",\"inlineIcon_error\":\"Layout_inlineIcon_error__UZyrC Layout_inlineIcon__3mLjc\",\"notification\":\"Layout_notification__1Lozc\",\"notificationIcon\":\"Layout_notificationIcon__1zABr\",\"notificationError\":\"Layout_notificationError__1VB5r Layout_notification__1Lozc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3IMrH\",\"header\":\"Login_header___CMfF\",\"fade-in\":\"Login_fade-in__19auu\",\"title\":\"Login_title__2UrVx\",\"content\":\"Login_content__2iFJK\",\"scale-in\":\"Login_scale-in__11_pu\",\"anonymousBtn\":\"Login_anonymousBtn__2GWKw\",\"label\":\"Login_label__1Fzsi\",\"footer\":\"Login_footer__28LBW\",\"heighten-in\":\"Login_heighten-in__U3I7p\",\"socialIcons\":\"Login_socialIcons__1ERG5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textInput\":\"Inputs_textInput__2PtjA\",\"colorPicker\":\"Inputs_colorPicker__2NE5M\",\"colorItem\":\"Inputs_colorItem__2_7_r\",\"colorItem_active\":\"Inputs_colorItem_active__2NkdZ Inputs_colorItem__2_7_r\",\"focus\":\"Inputs_focus__EnM_1\"};","export const firebaseConfig = {\r\n    apiKey: \"AIzaSyC2GQP50OlRLXwQTyhRlhSiTmLDO3jeND4\",\r\n    authDomain: \"jalins-matlista.firebaseapp.com\",\r\n    databaseURL: \"https://jalins-matlista-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"jalins-matlista\",\r\n    storageBucket: \"jalins-matlista.appspot.com\",\r\n    messagingSenderId: \"955087550048\",\r\n    appId: \"1:955087550048:web:59ba85bf28d19f71857505\"\r\n};","export const IDLE = \"IDLE\";\r\n\r\nexport const FETCH_START = \"FETCH_START\";\r\nexport const FETCH_COMPLETE = \"FETCH_COMPLETE\";\r\nexport const FETCH_FAILED = \"FETCH_FAILED\";\r\n\r\nexport const ADD_START = \"ADD_START\";\r\nexport const ADD_COMPLETE = \"ADD_COMPLETE\";\r\nexport const ADD_FAILED = \"ADD_FAILED\";\r\n\r\nexport const DELETE_START = \"DELETE_START\";\r\nexport const DELETE_COMPLETE = \"DELETE_COMPLETE\";\r\nexport const DELETE_FAILED = \"DELETE_FAILED\";\r\n\r\nexport const UPDATE_START = \"UPDATE_START\";\r\nexport const UPDATE_COMPLETE = \"UPDATE_COMPLETE\";\r\nexport const UPDATE_FAILED = \"UPDATE_FAILED\"; ","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/firestore\";\r\nimport { FETCH_START, FETCH_COMPLETE, FETCH_FAILED } from '../../store/statusTypes';\r\n\r\nexport default function useListener(collection) {\r\n    const { userId } = useSelector(s => s.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const cancelCallback = React.useRef(null);\r\n\r\n    const listen = (converter, actionTypes, orderBy, predicate) => {\r\n        if (!userId || !collection || cancelCallback.current) {\r\n            return;\r\n        }\r\n\r\n        const db = firebase.firestore();\r\n        let collectionRef = db.collection(\"users\").doc(userId).collection(collection);\r\n\r\n        if (orderBy) {\r\n            collectionRef = collectionRef.orderBy(orderBy[0], orderBy[1]);\r\n        }\r\n        if (predicate) {\r\n            collectionRef = collectionRef.where(predicate[0], predicate[1], predicate[2]);\r\n        }\r\n\r\n        dispatch({ type: actionTypes.SET, payload: [] });\r\n        dispatch({ type: actionTypes.SET_STATUS, payload: FETCH_START });\r\n\r\n        console.log(\"Listening to\", collection);\r\n\r\n        cancelCallback.current = collectionRef\r\n            .withConverter(converter)\r\n            .onSnapshot((snapshot) => {\r\n                snapshot.docChanges().forEach(change => {\r\n                    if (change.type === \"added\") {\r\n                        dispatch({ type: actionTypes.ADD, payload: change.doc.data() });\r\n                    }\r\n                    else if (change.type === \"modified\") {\r\n                        dispatch({ type: actionTypes.UPDATE, payload: change.doc.data() });\r\n                    }\r\n                    else if (change.type === \"removed\") {\r\n                        dispatch({ type: actionTypes.DELETE, payload: change.doc.id });\r\n                    }\r\n                });\r\n                dispatch({ type: actionTypes.SET_STATUS, payload: FETCH_COMPLETE })\r\n            }, error => {\r\n                dispatch({ type: actionTypes.SET_STATUS, payload: FETCH_FAILED });\r\n                console.error(error);\r\n                cancel();\r\n            });\r\n    }\r\n\r\n    const cancel = () => {\r\n        cancelCallback.current && cancelCallback.current();\r\n        cancelCallback.current = null;\r\n    }\r\n\r\n    return {\r\n        listen,\r\n        cancel,\r\n        isActive: cancelCallback.current\r\n    }\r\n}","export const ACTION_TYPES = {\r\n    categories: {\r\n        SET: \"SET_CATEGORIES\",\r\n        ADD: \"ADD_CATEGORY\",\r\n        UPDATE: \"UPDATE_CATEGORY\",\r\n        DELETE: \"DELETE_CATEGORY\",\r\n        SET_STATUS: \"SET_CATEGORIES_STATUS\"\r\n    },\r\n    colors: {\r\n        SET: \"SET_COLORS\",\r\n        ADD: \"ADD_COLOR\",\r\n        UPDATE: \"UPDATE_COLOR\",\r\n        SET_STATUS: \"SET_COLORS_STATUS\",\r\n    },\r\n    products: {\r\n        SET: \"SET_PRODUCTS\",\r\n        ADD: \"ADD_PRODUCT\",\r\n        DELETE: \"DELETE_PRODUCT\",\r\n        SET_STATUS: \"SET_PRODUCTS_STATUS\",\r\n    },\r\n    groceries: {\r\n        SET: \"SET_GROCERIES\",\r\n        ADD: \"ADD_GROCERY\",\r\n        DELETE: \"DELETE_GROCERY\",\r\n        SET_STATUS: \"SET_GROCERIES_STATUS\",\r\n    },\r\n}","export class Category {\r\n    constructor(id, name, description, colorId, colorHex) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.description = \"Antal produkter: \" + description;\r\n        this.colorId = colorId;\r\n        this.colorHex = colorHex;\r\n    }\r\n}\r\n\r\nexport const categoryConverter = {\r\n    toFirestore: function (category) {\r\n        return {\r\n            name: category.name,\r\n            productCount: category.productCount,\r\n            color: {\r\n                id: category.colorId,\r\n                hex: category.colorHex\r\n            }\r\n        };\r\n    },\r\n    fromFirestore: function (snapshot) {\r\n        const id = snapshot.id;\r\n        const data = snapshot.data();\r\n        return new Category(id, data.name, data.productCount, data.color.id, data.color.hex);\r\n    }\r\n};","export class Product {\r\n    constructor(id, name, categoryId, description, colorId, colorHex) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.categoryId = categoryId;\r\n        this.description = description;\r\n        this.colorId = colorId;\r\n        this.colorHex = colorHex;\r\n    }\r\n}\r\n\r\nexport const productConverter = {\r\n    toFirestore: function (product) {\r\n\r\n    },\r\n    fromFirestore: function (snapshot) {\r\n        const id = snapshot.id;\r\n        const data = snapshot.data();\r\n        return new Product(\r\n            id,\r\n            data.name,\r\n            data.category.id,\r\n            data.category.name,\r\n            data.category.color.id,\r\n            data.category.color.hex\r\n        );\r\n    }\r\n};","export class Grocery {\r\n    constructor(id, description, productId, productName, colorHex) {\r\n        this.id = id;\r\n        this.description = description;\r\n        this.productId = productId;\r\n        this.name = productName;\r\n        this.colorHex = colorHex;\r\n    }\r\n}\r\n\r\nexport const groceryConverter = {\r\n    toFirestore: function (grocery) {\r\n\r\n    },\r\n    fromFirestore: function (snapshot) {\r\n        const id = snapshot.id;\r\n        const data = snapshot.data();\r\n        return new Grocery(\r\n            id,\r\n            data.description,\r\n            data.product.id,\r\n            data.product.name,\r\n            data.product.category.color.hex,\r\n        );\r\n    }\r\n};","export class Color {\r\n    constructor(id, hex, available) {\r\n        this.id = id;\r\n        this.hex = hex;\r\n        this.available = available;\r\n    }\r\n    // toString() {\r\n    //     return this.id + ', ' + this.hex;\r\n    // }\r\n}\r\n\r\nexport const colorConverter = {\r\n    toFirestore: function (color) {\r\n        return {\r\n            id: color.id,\r\n            hex: color.hex\r\n        };\r\n    },\r\n    fromFirestore: function (snapshot) {\r\n        const id = snapshot.id;\r\n        const data = snapshot.data();\r\n        return new Color(id, data.hex, data.available);\r\n    }\r\n};","export const setMenuActive = (payload) => ({ type: \"SET_MENU_ACTIVE\", payload });\r\nexport const setFormActive = (payload) => ({ type: \"SET_FORM_ACTIVE\", payload });\r\nexport const setSearchActive = (payload) => ({ type: \"SET_SEARCH_ACTIVE\", payload });\r\nexport const setActionsHeight = (payload) => ({ type: \"SET_ACTIONS_HEIGHT\", payload });\r\nexport const createNotification = (payload) => ({ type: \"SET_NOTIFICATION\", payload });","import { createElement } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Navigation.module.css';\r\n\r\nfunction ActionIcon(props) {\r\n    const { icon, isActive, onClick } = props;\r\n\r\n    return (\r\n        <>\r\n            {createElement(icon, {\r\n                className: isActive ? styles.actionIcon_active : styles.actionIcon,\r\n                onClick\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\nActionIcon.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    isActive: PropTypes.bool.isRequired,\r\n    icon: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ActionIcon\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Navigation.module.css';\r\n\r\nfunction MenuToggle(props) {\r\n    const { isActive, currentPage, onClick } = props;\r\n\r\n    return (\r\n        <div\r\n            className={isActive ? styles.menuToggle_active : styles.menuToggle}\r\n            onClick={onClick}\r\n        >\r\n            <div className={styles.hamburger}>\r\n                <div className={styles.line} />\r\n                <div className={styles.line} />\r\n                <div className={styles.line} />\r\n            </div>\r\n            <div className={styles.currentPage}>\r\n                {currentPage}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nMenuToggle.propTypes = {\r\n    isActive: PropTypes.bool.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    currentPage: PropTypes.string,\r\n}\r\n\r\nexport default MenuToggle\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Navigation.module.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NavMenu(props) {\r\n    const { items, isActive, currentLocation, signOut } = props;\r\n\r\n    const LogoutLink = () => (\r\n        <li className={styles.logoutLink} onClick={signOut}>\r\n            Logga ut\r\n        </li>\r\n    )\r\n\r\n    const navLinks = Object.keys(items).map(n =>\r\n        <li key={n} className={currentLocation === n ? styles.navLink_active : styles.navLink}>\r\n            <Link to={n}>\r\n                {items[n]}\r\n            </Link>\r\n        </li>\r\n    )\r\n\r\n    return (\r\n        <ul className={isActive ? styles.navMenu_active : styles.navMenu}>\r\n            {navLinks}\r\n            <LogoutLink />\r\n        </ul>\r\n    )\r\n}\r\n\r\nNavMenu.propTypes = {\r\n    items: PropTypes.object.isRequired,\r\n    isActive: PropTypes.bool.isRequired,\r\n    currentLocation: PropTypes.string.isRequired,\r\n    signOut: PropTypes.func.isRequired\r\n}\r\n\r\n","import firebase from 'firebase/app';\r\nimport \"firebase/firestore\";\r\nimport { FETCH_COMPLETE, FETCH_FAILED, FETCH_START } from '../statusTypes';\r\n\r\nexport const setUserId = (payload) => ({ type: \"SET_USER_ID\", payload });\r\nexport const setUserStatus = (payload) => ({ type: \"SET_USER_STATUS\", payload });\r\n\r\nexport const signInUserAsync = (userName) => async dispatch => {\r\n    dispatch(setUserStatus(FETCH_START));\r\n\r\n    firebase.firestore()\r\n        .collection(\"users\")\r\n        .where(\"name\", \"==\", userName.toLowerCase())\r\n        .get()\r\n        .then(res => {\r\n            const user = res.docs[0];\r\n\r\n            if (user) {\r\n                dispatch(setUserId(user.id));\r\n            }\r\n\r\n            dispatch(setUserStatus(FETCH_COMPLETE));\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            dispatch(setUserStatus(FETCH_FAILED));\r\n        })\r\n}","import firebase from 'firebase/app';\r\nimport \"firebase/firestore\";\r\nimport { categoryConverter } from '../../api/converters/category';\r\nimport {\r\n    ADD_START, ADD_FAILED, ADD_COMPLETE,\r\n    DELETE_START, DELETE_COMPLETE, DELETE_FAILED\r\n} from '../statusTypes';\r\n\r\nexport const setCategories = (payload) => ({ type: \"SET_CATEGORIES\", payload });\r\nexport const addCategory = (payload) => ({ type: \"ADD_CATEGORY\", payload });\r\nexport const updateCategory = (payload) => ({ type: \"UPDATE_CATEGORY\", payload });\r\nexport const deleteCategory = (payload) => ({ type: \"DELETE_CATEGORY\", payload });\r\nexport const setCategoriesStatus = (payload) => ({ type: \"SET_CATEGORIES_STATUS\", payload });\r\n\r\n// Async actions\r\nexport const addCategoryAsync = (userId, category) => async dispatch => {\r\n    const batch = firebase.firestore().batch();\r\n    const userRef = firebase.firestore().collection(\"users\").doc(userId);\r\n\r\n    const categoriesRef = userRef.collection(\"categories\").withConverter(categoryConverter).doc();\r\n    batch.set(categoriesRef, category);\r\n\r\n    const colorsRef = userRef.collection(\"colors\").doc(category.colorId);\r\n    batch.update(colorsRef, { available: false });\r\n\r\n    dispatch(setCategoriesStatus(ADD_START));\r\n\r\n    batch.commit()\r\n        .then(() => dispatch(setCategoriesStatus(ADD_COMPLETE)))\r\n        .catch((err) => {\r\n            dispatch(setCategoriesStatus(ADD_FAILED));\r\n            console.error(err)\r\n        })\r\n}\r\n\r\nexport const deleteCategoryAsync = (userId, category) => async dispatch => {\r\n    if (!category || !userId) return;\r\n\r\n    const batch = firebase.firestore().batch();\r\n    const userRef = firebase.firestore().collection(\"users\").doc(userId);\r\n\r\n    const categoriesRef = userRef.collection(\"categories\").doc(category.id);\r\n    batch.delete(categoriesRef);\r\n\r\n    const colorsRef = userRef.collection(\"colors\").doc(category.colorId);\r\n    batch.update(colorsRef, { available: true });\r\n\r\n    dispatch(setCategoriesStatus(DELETE_START));\r\n\r\n    batch.commit()\r\n        .then(() => dispatch(setCategoriesStatus(DELETE_COMPLETE)))\r\n        .catch((err) => {\r\n            dispatch(setCategoriesStatus(DELETE_FAILED))\r\n            console.error(err);\r\n        })\r\n}","import firebase from 'firebase/app';\r\nimport \"firebase/firestore\";\r\nimport { ADD_COMPLETE, ADD_FAILED, ADD_START, DELETE_COMPLETE, DELETE_FAILED, DELETE_START } from '../statusTypes';\r\n\r\nexport const setProducts = (payload) => ({ type: \"SET_PRODUCTS\", payload });\r\nexport const addProduct = (payload) => ({ type: \"ADD_PRODUCT\", payload });\r\nexport const deleteProduct = (payload) => ({ type: \"DELETE_PRODUCT\", payload });\r\nexport const setProductsStatus = (payload) => ({ type: \"SET_PRODUCTS_STATUS\", payload });\r\n\r\nexport const addProductAsync = (userId, product) => async dispatch => {\r\n    dispatch(setProductsStatus(ADD_START));\r\n\r\n    firebase.firestore().collection(\"users\").doc(userId).collection(\"products\")\r\n        .add(product)\r\n        .then(() => {\r\n            dispatch(setProductsStatus(ADD_COMPLETE));\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            dispatch(setProductsStatus(ADD_FAILED));\r\n        })\r\n}\r\n\r\nexport const deleteProductAsync = (userId, productId) => async dispatch => {\r\n    dispatch(setProductsStatus(DELETE_START));\r\n\r\n    firebase.firestore().collection(\"users\").doc(userId).collection(\"products\").doc(productId)\r\n        .delete()\r\n        .then(() => {\r\n            dispatch(setProductsStatus(DELETE_COMPLETE));\r\n        })\r\n        .catch(err => {\r\n            dispatch(setProductsStatus(DELETE_FAILED));\r\n        })\r\n}","import firebase from 'firebase/app';\r\nimport \"firebase/firestore\";\r\nimport { ADD_COMPLETE, ADD_FAILED, ADD_START, DELETE_COMPLETE, DELETE_FAILED, DELETE_START } from '../statusTypes';\r\n\r\nexport const setGroceries = (payload) => ({ type: \"SET_GROCERIES\", payload });\r\nexport const addGrocery = (payload) => ({ type: \"ADD_GROCERY\", payload });\r\nexport const deleteGrocery = (payload) => ({ type: \"DELETE_GROCERY\", payload });\r\nexport const setGroceriesStatus = (payload) => ({ type: \"SET_GROCERIES_STATUS\", payload });\r\n\r\nexport const addGroceryAsync = (userId, grocery) => async dispatch => {\r\n    dispatch(setGroceriesStatus(ADD_START));\r\n\r\n    firebase.firestore().collection(\"users\").doc(userId).collection(\"groceries\")\r\n        // .withConverter\r\n        .add(grocery)\r\n        .then(() => {\r\n            dispatch(setGroceriesStatus(ADD_COMPLETE));\r\n        })\r\n        .catch(err => {\r\n            console.error(err);\r\n            dispatch(setGroceriesStatus(ADD_FAILED));\r\n        })\r\n}\r\n\r\nexport const deleteGroceryAsync = (userId, groceryId) => async dispatch => {\r\n    dispatch(setGroceriesStatus(DELETE_START));\r\n\r\n    firebase.firestore().collection(\"users\").doc(userId).collection(\"groceries\").doc(groceryId)\r\n        .delete()\r\n        .then(() => {\r\n            dispatch(setGroceriesStatus(DELETE_COMPLETE));\r\n        })\r\n        .catch(err => {\r\n            dispatch(setGroceriesStatus(DELETE_FAILED));\r\n        })\r\n}","import { useLayoutEffect, useEffect } from 'react'\r\nimport { setFormActive, setMenuActive, setSearchActive } from '../../store/actions/uiActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport ActionIcon from './ActionIcon';\r\nimport MenuToggle from './MenuToggle';\r\nimport NavMenu from './NavMenu';\r\nimport styles from './Navigation.module.css';\r\nimport { FaSearch, FaPlusCircle } from 'react-icons/fa';\r\nimport { setUserId } from '../../store/actions';\r\n\r\nconst LINKS = {\r\n    \"/groceries\": \"Inköpslista\",\r\n    \"/products\": \"Produkter\",\r\n    \"/categories\": \"Kategorier\"\r\n}\r\n\r\nexport default function Navigation() {\r\n    const { menuActive, searchActive, formActive } = useSelector(s => s.ui);\r\n    const { userId } = useSelector(s => s.user);\r\n    const dispatch = useDispatch();\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    // When user navigates\r\n    useLayoutEffect(() => {\r\n        dispatch(setSearchActive(false));\r\n        dispatch(setFormActive(false));\r\n\r\n        // Delay before menu closes to allow icons to reset\r\n        setTimeout(() => {\r\n            dispatch(setMenuActive(false));\r\n        }, 300)\r\n    }, [location, dispatch]);\r\n\r\n    // Redirect if user disconnects\r\n    useEffect(() => {\r\n        if (!userId && location.pathname !== \"/\") {\r\n            history.push(\"/\");\r\n        }\r\n    }, [userId, location.pathname, history]);\r\n\r\n    const toggleSearch = () => dispatch(setSearchActive(!searchActive));\r\n    const toggleForm = () => dispatch(setFormActive(!formActive));\r\n    const toggleMenu = () => dispatch(setMenuActive(!menuActive));\r\n    const signOut = () => dispatch(setUserId(\"\"));\r\n\r\n    return (\r\n        <>\r\n            <div className={location.pathname === \"/\" ? styles.topnav_hidden : styles.topnav}>\r\n\r\n                {/* TOGGLE */}\r\n                <MenuToggle\r\n                    isActive={menuActive}\r\n                    onClick={toggleMenu}\r\n                    currentPage={LINKS[location.pathname]}\r\n                />\r\n\r\n                {/* ACTIONS */}\r\n                <div className={menuActive ? styles.actions_hidden : styles.actions}>\r\n                    <ActionIcon\r\n                        icon={FaSearch}\r\n                        onClick={toggleSearch}\r\n                        isActive={searchActive}\r\n                    />\r\n                    <ActionIcon\r\n                        icon={FaPlusCircle}\r\n                        onClick={toggleForm}\r\n                        isActive={formActive}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {/* MENU */}\r\n            <NavMenu\r\n                items={LINKS}\r\n                isActive={menuActive}\r\n                currentLocation={location.pathname}\r\n                signOut={signOut}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport styles from './Layout.module.css';\r\n\r\nexport default function ActionsContainer({ children, height }) {\r\n    const { actionsHeight } = useSelector(s => s.ui);\r\n\r\n    return (\r\n        <div\r\n            className={styles.actionsContainer}\r\n            style={{ minHeight: `${actionsHeight}rem` }}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setActionsHeight } from '../../../../store/actions/';\r\n\r\nexport default function usePageLayout(searchHeight, formHeight) {\r\n    const { searchActive, formActive } = useSelector(s => s.ui);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const updateHeight = (newHeight = 0) => {\r\n            dispatch(setActionsHeight(newHeight));\r\n        };\r\n\r\n        if (searchActive) {\r\n            updateHeight(searchHeight);\r\n        }\r\n        else if (formActive) {\r\n            updateHeight(formHeight);\r\n        }\r\n        else {\r\n            updateHeight(0);\r\n        }\r\n    }, [searchActive, formActive, formHeight, searchHeight, dispatch]);\r\n\r\n    return {\r\n        searchActive,\r\n        formActive,\r\n    };\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport default function useTextInput(initialValue = \"\", min, max, pattern) {\r\n    const [value, setValue] = useState(initialValue);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (newValue) => {\r\n        const error = validate(newValue);\r\n        setError(error);\r\n        setValue(newValue);\r\n\r\n        return error;\r\n    }\r\n\r\n    const validate = (newValue) => {\r\n        if (min && newValue.length < min) {\r\n            return `Fältet måste innehålla minst ${min} tecken`;\r\n        }\r\n        else if (max && newValue.length > max) {\r\n            return `Fältet får inte innehålla mer än ${max} tecken`;\r\n        }\r\n        else if (pattern && !pattern.test(newValue)) {\r\n            return `Fältet innehåller felaktiga uppgifter`;\r\n        }\r\n        else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    const reset = () => {\r\n        setValue(\"\");\r\n        setError(\"\");\r\n    }\r\n\r\n    return {\r\n        value,\r\n        error,\r\n        onChange,\r\n        validate,\r\n        reset\r\n    }\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport useTextInput from '../../Inputs/hooks/useTextInput'\r\n\r\nexport default function useSearch(items) {\r\n    const [results, setResults] = useState(items);\r\n    const input = useTextInput();\r\n    \r\n    useEffect(() => {\r\n        setResults(input.value\r\n            ? items.filter(i => i.name.toUpperCase().includes(input.value.toUpperCase()))\r\n            : items\r\n        );\r\n    }, [items, input.value])\r\n\r\n    return {\r\n        results,\r\n        input\r\n    }\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Inputs.module.css';\r\n\r\nexport default function TextInput({ placeholder, onChange, value }) {\r\n    return (\r\n        <input\r\n            type=\"text\"\r\n            placeholder={placeholder}\r\n            onChange={e => onChange(e.target.value)}\r\n            value={value}\r\n            className={styles.textInput}\r\n        />\r\n    )\r\n}\r\n\r\nTextInput.propTypes = {\r\n    placeholder: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string,\r\n}\r\n\r\n","import React from 'react';\r\nimport styles from './Layout.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function FlexRow({ children }) {\r\n    return (\r\n        <div className={styles.row}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nFlexRow.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { createElement } from 'react';\r\nimport styles from './Layout.module.css';\r\n\r\nexport default function InlineIcon({ icon, isActive, hasError }) {\r\n    const iconClass = () => {\r\n        if (hasError) {\r\n            return styles.inlineIcon_error;\r\n        }\r\n        else if (isActive) {\r\n            return styles.inlineIcon_active;\r\n        }\r\n        else {\r\n            return styles.inlineIcon;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {createElement(icon, {\r\n                className: iconClass(),\r\n            })}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nInlineIcon.propTypes = {\r\n    icon: PropTypes.func.isRequired,\r\n    isActive: PropTypes.bool,\r\n    hasError: PropTypes.bool\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TextInput from '../Inputs/TextInput';\r\nimport FlexRow from '../Layout/FlexRow';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport InlineIcon from '../Layout/InlineIcon';\r\n\r\nexport default function Search(props) {\r\n    return (\r\n        <FlexRow>\r\n            <InlineIcon icon={FaSearch} isActive={!!props.value} />\r\n            <TextInput {...props} />\r\n        </FlexRow>\r\n    )\r\n}\r\n\r\nSearch.defaultProps = {\r\n    placeholder: \"Sök..\"\r\n}\r\n\r\nSearch.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    placeholder: PropTypes.string\r\n}\r\n\r\n\r\n","export const DIRECTION = {\r\n    none: 0,\r\n    left: 1,\r\n    right: 2,\r\n}\r\n\r\nexport const START_THRESHOLD = 10;\r\nexport const TRIGGER_THRESHOLD = 200;","export default function simpleReducer(state, newState) {\r\n    return { ...state, ...newState };\r\n}","import { useEffect, useRef, useReducer, Fragment } from 'react';\r\nimport styles from './SwipeableList.module.css';\r\nimport { DIRECTION, START_THRESHOLD } from './contants';\r\nimport PropTypes from 'prop-types';\r\nimport { FaTrash, FaCheck } from 'react-icons/fa';\r\nimport simpleReducer from '../../../assets/simpleReducer';\r\n\r\nconst initialState = {\r\n    direction: DIRECTION.none,\r\n    trigger: DIRECTION.none,\r\n    swipeStart: [0, 0],\r\n    isSwiping: false,\r\n}\r\n\r\n// Could be made more generic in the future\r\n// Currently tightly coupled to the passed item\r\n// Maybe pass in React nodes instead of hardcoding them here\r\nexport default function SwipeableListItem(props) {\r\n    const { item, onLeftSwipe, onRightSwipe, triggerAt = 50 } = props;\r\n    const [state, setState] = useReducer(simpleReducer, initialState);\r\n\r\n    // REFS\r\n    const contentRef = useRef(null);\r\n    const itemRef = useRef(null);\r\n    const bgRef = useRef(null);\r\n    const triggerThreshold = useRef(300);\r\n\r\n    useEffect(() => {\r\n        if (itemRef.current) {\r\n            triggerThreshold.current = (itemRef.current.offsetWidth / 100) * triggerAt\r\n        }\r\n    }, [itemRef, triggerAt])\r\n\r\n    useEffect(() => {\r\n        if (bgRef.current) {\r\n            if (state.direction === DIRECTION.left && onLeftSwipe) {\r\n                bgRef.current.className = styles.bg_left;\r\n            }\r\n            else if (state.direction === DIRECTION.right && onRightSwipe) {\r\n                bgRef.current.className = styles.bg_right;\r\n            }\r\n            else {\r\n                bgRef.current.className = styles.bg;\r\n            }\r\n        }\r\n    }, [state.direction, bgRef, onRightSwipe, onLeftSwipe])\r\n\r\n    // EVENT HANDLERS\r\n    // Swipe start\r\n    const onSwipeStart = (e) => {\r\n        if (state.isSwiping) {\r\n            return;\r\n        }\r\n\r\n        const { clientX, clientY } = e;\r\n\r\n        contentRef.current.className = styles.content_active;\r\n\r\n        setState({\r\n            direction: DIRECTION.none,\r\n            trigger: false,\r\n            swipeStart: [clientX, clientY],\r\n            isSwiping: true,\r\n        })\r\n    }\r\n\r\n    // Swipe move\r\n    const onSwipeMove = (e) => {\r\n        if (!state.isSwiping) {\r\n            return;\r\n        }\r\n\r\n        const { clientX, clientY } = e;\r\n        const [startX, startY] = state.swipeStart;\r\n\r\n        const offsetX = clientX - startX;\r\n        const offsetY = clientY - startY;\r\n        const absX = Math.abs(offsetX);\r\n        const absY = Math.abs(offsetY);\r\n\r\n        // Minimum threshold reached\r\n        if (absX > START_THRESHOLD) {\r\n            // User is scrolling Y axis\r\n            if (absY > absX) {\r\n                reset();\r\n                return;\r\n            }\r\n\r\n            setState({\r\n                direction: offsetX < 0 ? DIRECTION.left : DIRECTION.right,\r\n                trigger: absX > triggerThreshold.current ? true : false\r\n            });\r\n\r\n            // Should request animation frame\r\n            setContentPosition(offsetX);\r\n            setBackgroundOpacity((absX / triggerThreshold.current).toFixed(2));\r\n        }\r\n    }\r\n\r\n    // Swipe end\r\n    const onSwipeEnd = () => {\r\n        if (!state.isSwiping) {\r\n            return;\r\n        }\r\n        else if (state.trigger) {\r\n            if (state.direction === DIRECTION.left && onLeftSwipe) {\r\n                removeListItem();\r\n                setTimeout(() => {\r\n                    onLeftSwipe();\r\n                }, 600);\r\n            }\r\n            else if (state.direction === DIRECTION.right && onRightSwipe) {\r\n                // NEVER USED\r\n            }\r\n        }\r\n\r\n        reset();\r\n    }\r\n\r\n    const setContentPosition = (offset) => {\r\n        if (contentRef.current) {\r\n            contentRef.current.style.transform = `translateX(${offset}px)`;\r\n        }\r\n    }\r\n\r\n    const setBackgroundOpacity = (opacity) => {\r\n        if (bgRef.current) {\r\n            bgRef.current.style.opacity = opacity;\r\n        }\r\n    }\r\n\r\n    const removeListItem = () => {\r\n        if (itemRef.current) {\r\n            itemRef.current.className = styles.listItem_remove;\r\n        }\r\n    }\r\n\r\n    const reset = () => {\r\n        if (!contentRef.current) {\r\n            return;\r\n        }\r\n\r\n        contentRef.current.className = styles.content_reset;\r\n        setState({ isSwiping: false });\r\n        setContentPosition(0);\r\n\r\n        setTimeout(() => {\r\n            if (contentRef.current) {\r\n                contentRef.current.className = styles.content;\r\n                setState(initialState);\r\n            }\r\n        }, 300)\r\n    }\r\n\r\n    // EVENTS\r\n    const swipeEvents = {\r\n        // Touch\r\n        onTouchStart: (e) => onSwipeStart(e.changedTouches[0]),\r\n        onTouchMove: (e) => onSwipeMove(e.changedTouches[0]),\r\n        onTouchEnd: () => onSwipeEnd(),\r\n        onTouchCancel: () => reset(),\r\n        // Mouse\r\n        onMouseDownCapture: (e) => onSwipeStart(e),\r\n        onMouseMove: (e) => onSwipeMove(e),\r\n        onMouseUp: () => onSwipeEnd(),\r\n        onMouseLeave: () => reset(),\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={styles.listItem}\r\n            ref={itemRef}\r\n            {...swipeEvents}\r\n        >\r\n            <div ref={bgRef} className={styles.bg}>\r\n                {state.direction === DIRECTION.left && onLeftSwipe &&\r\n                    <Fragment>\r\n                        <p className={styles.bgText}>\r\n                            Ta bort \"{item.name}\"?\r\n                        </p>\r\n                        <FaTrash\r\n                            className={state.trigger ? styles.bgIcon_wobble : styles.bgIcon}\r\n                        />\r\n                    </Fragment>\r\n                }\r\n                {state.direction === DIRECTION.right && onRightSwipe &&\r\n                    <Fragment>\r\n                        <FaCheck\r\n                            className={state.trigger ? styles.bgIcon_wobble : styles.bgIcon}\r\n                        />\r\n                        <p className={styles.bgText}>\r\n                            Bekräfta \"{item.name}\"?\r\n                        </p>\r\n                    </Fragment>\r\n                }\r\n            </div>\r\n\r\n            <div\r\n                ref={contentRef}\r\n                className={styles.content}\r\n                {...swipeEvents}\r\n            >\r\n                <div className={styles.contentText}>\r\n                    <h3 className={styles.name}>\r\n                        {item.name}\r\n                    </h3>\r\n                    <p className={styles.description}>\r\n                        {item.description}\r\n                    </p>\r\n                </div>\r\n\r\n                <div className={styles.categoryColor} style={{ background: item.colorHex }} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst listItemPropType = PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    colorHex: PropTypes.string.isRequired,\r\n    description: PropTypes.string,\r\n    deleted: PropTypes.bool,\r\n})\r\n\r\nSwipeableListItem.propTypes = {\r\n    item: listItemPropType.isRequired,\r\n    onLeftSwipe: PropTypes.func,\r\n    onRightSwipe: PropTypes.func,\r\n}\r\n\r\n// FOR REFERENCE\r\n// const SwipePropType = PropTypes.shape({\r\n//     action: () => console.log(),\r\n//     content: <div></div>,\r\n//     animation: ??\r\n// })\r\n\r\n\r\n","import React from 'react';\r\nimport styles from './SwipeableList.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function SwipeableList({ children }) {\r\n    if (!children.length) {\r\n        return (\r\n            <div className={styles.placeholder}>\r\n                Inga resultat..\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ul className={styles.list}>\r\n            {children}\r\n        </ul>\r\n    )\r\n}\r\n\r\nSwipeableList.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n}\r\n","import { createElement } from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Layout.module.css';\r\n\r\nexport default function InlineButton({ onClick, icon, type = \"submit\", disabled = false }) {\r\n    return (\r\n        <button type={type} disabled={disabled} className={styles.inlineBtn} onClick={onClick}>\r\n            {createElement(icon)}\r\n        </button>\r\n    )\r\n}\r\n\r\nInlineButton.propTypes = {\r\n    onClick: PropTypes.func,\r\n    icon: PropTypes.func.isRequired,\r\n    type: PropTypes.string,\r\n    disabled: PropTypes.bool,\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Inputs.module.css';\r\n\r\nexport default function ColorPicker({ children }) {\r\n    return (\r\n        <div className={styles.colorPicker}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nColorPicker.propTypes = {\r\n    children: PropTypes.node\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Inputs.module.css'\r\n\r\nexport default function ColorItem({ isActive, id, hex, onClick }) {\r\n    const handleClick = (e) => {\r\n        e.target.scrollIntoView({ behaviour: \"smooth\", inline: \"center\", block: \"center\" });\r\n        onClick();\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={isActive ? styles.colorItem_active : styles.colorItem}\r\n            onClick={handleClick}\r\n            style={{ background: hex }}\r\n        />\r\n    )\r\n}\r\n\r\nColorItem.propTypes = {\r\n    isActive: PropTypes.bool.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    hex: PropTypes.string.isRequired,\r\n}\r\n\r\n","import { useEffect, useState, Fragment } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FaTag, FaPalette, FaPlus } from 'react-icons/fa';\r\nimport { ADD_START, ADD_FAILED, ADD_COMPLETE, IDLE, FETCH_COMPLETE } from '../../store/statusTypes';\r\nimport FlexRow from '../_shared/Layout/FlexRow';\r\nimport useTextInput from '../_shared/Inputs/hooks/useTextInput';\r\nimport InlineButton from '../_shared/Layout/InlineButton';\r\nimport InlineIcon from '../_shared/Layout/InlineIcon';\r\nimport TextInput from '../_shared/Inputs/TextInput';\r\nimport ColorPicker from '../_shared/Inputs/ColorPicker';\r\nimport ColorItem from '../_shared/Inputs/ColorItem';\r\nimport { createNotification } from '../../store/actions/uiActions';\r\nimport { addCategoryAsync, setCategoriesStatus } from '../../store/actions/categoriesActions';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CategoryForm({ callback, initialCategoryName = \"\" }) {\r\n    const { categoriesStatus, categories } = useSelector(s => s.categories);\r\n    const { colors, colorsStatus } = useSelector(s => s.colors);\r\n    const { userId } = useSelector(s => s.user);\r\n    const dispatch = useDispatch();\r\n\r\n    // Form fields\r\n    const categoryName = useTextInput(initialCategoryName, 1);\r\n    const [colorId, setColorId] = useState(\"\");\r\n    const [colorError, setColorError] = useState(false);\r\n\r\n    const [availableColors, setAvailableColors] = useState([]);\r\n\r\n    // Update colors when item added\r\n    useEffect(() => {\r\n        setAvailableColors(colors.filter(c => c.available));\r\n    }, [colors])\r\n\r\n    // On submit\r\n    useEffect(() => {\r\n        const setIdle = () => {\r\n            dispatch(setCategoriesStatus(IDLE));\r\n        }\r\n\r\n        if (categoriesStatus === ADD_COMPLETE) {\r\n            callback && callback();\r\n\r\n            categoryName.reset();\r\n            setColorError(false);\r\n            setColorId(\"\");\r\n            setIdle();\r\n        }\r\n        else if (categoriesStatus === ADD_FAILED) {\r\n            dispatch(createNotification(\"Det gick inte att lägga till kategorin\"))\r\n            setIdle();\r\n        }\r\n    }, [categoriesStatus, categoryName])\r\n\r\n    const onSubmit = () => {\r\n        const nameError = categoryName.onChange(categoryName.value);\r\n\r\n        if (nameError) {\r\n            return;\r\n        }\r\n        else if (!colorId) {\r\n            setColorError(true);\r\n            return;\r\n        }\r\n\r\n        const availableColor = availableColors.find(c => c.id === colorId);\r\n        const categoryNameExists = categories.find(c =>\r\n            c.name.toUpperCase() === categoryName.value.toUpperCase()\r\n        );\r\n\r\n        if (!availableColor) {\r\n            // notify user\r\n            dispatch(createNotification(\"Färgen är inte tillgänglig\"))\r\n            return;\r\n        }\r\n        else if (categoryNameExists) {\r\n            // notify user\r\n            dispatch(createNotification(\"Kategorin finns redan\"))\r\n            return;\r\n        }\r\n\r\n        const addCategory = {\r\n            name: categoryName.value,\r\n            productCount: 0,\r\n            colorId: availableColor.id,\r\n            colorHex: availableColor.hex,\r\n        }\r\n\r\n        // const addCategory = {\r\n        //     name: categoryName.value,\r\n        //     productCount: 0,\r\n        //     color: {\r\n        //         id: availableColor.id,\r\n        //         hex: availableColor.hex\r\n        //     }\r\n        // }\r\n\r\n        dispatch(addCategoryAsync(userId, addCategory));\r\n    }\r\n\r\n    const loading = categoriesStatus === ADD_START;\r\n\r\n    return (\r\n        <Fragment>\r\n            {/* CATEGORY NAME */}\r\n            <FlexRow>\r\n                <InlineIcon\r\n                    icon={FaTag}\r\n                    isActive={!!categoryName.value}\r\n                    hasError={!!categoryName.error}\r\n                />\r\n                <TextInput {...categoryName} placeholder=\"Vad heter kategorin?\" />\r\n                <InlineButton\r\n                    onClick={onSubmit}\r\n                    icon={FaPlus}\r\n                    disabled={loading}\r\n                />\r\n            </FlexRow>\r\n\r\n            {/* COLOR PICKER */}\r\n            <FlexRow>\r\n                <InlineIcon\r\n                    hasError={colorError}\r\n                    icon={FaPalette}\r\n                />\r\n                <ColorPicker>\r\n                    {availableColors.map(c => {\r\n                        return (\r\n                            <ColorItem\r\n                                id={c.id}\r\n                                key={c.id}\r\n                                hex={c.hex}\r\n                                onClick={() => setColorId(c.id)}\r\n                                isActive={c.id === colorId}\r\n                            />\r\n                        )\r\n                    })}\r\n                </ColorPicker>\r\n            </FlexRow>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nCategoryForm.propTypes = {\r\n    callback: PropTypes.func,\r\n    initialCategoryName: PropTypes.string\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteCategoryAsync, deleteCategory, updateCategory, createNotification } from '../../store/actions';\r\nimport { DELETE_FAILED } from '../../store/statusTypes';\r\nimport ActionsContainer from '../_shared/Layout/ActionsContainer';\r\nimport usePageLayout from '../_shared/Layout/hooks/usePageLayout';\r\nimport useSearch from '../_shared/Search/hooks/useSearch';\r\nimport Search from '../_shared/Search/Search';\r\nimport { SwipeableList, SwipeableListItem } from '../_shared/SwipeableList/';\r\nimport CategoryForm from './CategoryForm';\r\n\r\nexport default function Categories() {\r\n    const { categories, categoriesStatus } = useSelector(s => s.categories);\r\n\r\n    const { userId } = useSelector(s => s.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const { searchActive, formActive } = usePageLayout(7, 11);\r\n    const search = useSearch(categories);\r\n\r\n    React.useEffect(() => {\r\n        if (categoriesStatus === DELETE_FAILED) {\r\n            dispatch(createNotification(\"Det gick inte att ta bort kategorin\"));\r\n        }\r\n    }, [categoriesStatus, dispatch])\r\n\r\n    return (\r\n        <main>\r\n            <ActionsContainer>\r\n                {searchActive && <Search {...search.input} placeholder=\"Sök bland kategorier..\" />}\r\n                {formActive && <CategoryForm />}\r\n            </ActionsContainer>\r\n\r\n            <SwipeableList>\r\n                {search.results.map((item, key) => {\r\n                    return (\r\n                        <SwipeableListItem\r\n                            key={item.id}\r\n                            item={item}\r\n                            onLeftSwipe={() => dispatch(deleteCategoryAsync(userId, item))}\r\n                        />\r\n                    )\r\n                })}\r\n            </SwipeableList>\r\n        </main>\r\n    )\r\n}","import { useEffect, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styles from \"./Layout.module.css\";\r\nimport { FaExclamationCircle } from 'react-icons/fa';\r\n\r\n// Might want to set this in the store eventually\r\nconst DEFAULT_DELAY = 3000;\r\n\r\nexport default function Notification() {\r\n    const { notificationMessage } = useSelector(s => s.ui);\r\n    const ref = useRef(null);\r\n\r\n    // Currently only used to display errors\r\n    useEffect(() => {\r\n        if (notificationMessage && ref.current) {\r\n            ref.current.style.display = \"flex\";\r\n\r\n            // Handle notification types here if needed\r\n            ref.current.className = styles.notificationError;\r\n\r\n            // Fade out after a delay\r\n            setTimeout(() => {\r\n                ref.current.className = styles.notification;\r\n            }, DEFAULT_DELAY);\r\n\r\n            // Remove element from DOM once transition completes to prevent unexpected behaviour\r\n            setTimeout(() => {\r\n                ref.current.style.display = \"none\";\r\n            }, DEFAULT_DELAY + 350);\r\n        }\r\n    }, [notificationMessage, ref]);\r\n\r\n    return (\r\n        <div className={styles.notification} ref={ref}>\r\n            <FaExclamationCircle size=\"24\" className={styles.notificationIcon} />\r\n            {notificationMessage}\r\n        </div>\r\n    )\r\n}\r\n","import { Fragment } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Inputs.module.css';\r\n\r\nexport default function SuggestionInput({ placeholder, onChange, value, options }) {\r\n    return (\r\n        <Fragment>\r\n            <input\r\n                type=\"text\"\r\n                placeholder={placeholder}\r\n                onChange={e => onChange(e.target.value)}\r\n                value={value}\r\n                className={styles.textInput}\r\n                list=\"suggestions\"\r\n            />\r\n            <datalist id=\"suggestions\">\r\n                {options.map(i => {\r\n                    return (\r\n                        <option key={i} value={i} />\r\n                    )\r\n                })}\r\n            </datalist>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nSuggestionInput.propTypes = {\r\n    placeholder: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n    value: PropTypes.string,\r\n    options: PropTypes.array.isRequired\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Layout.module.css';\r\nimport FlexRow from './FlexRow';\r\nimport InlineButton from './InlineButton';\r\nimport { FaChevronLeft } from 'react-icons/fa';\r\n\r\nexport default function ActionsHeader({ onBack, content }) {\r\n    return (\r\n        <div className={styles.actionsHeader}>\r\n            <InlineButton\r\n                type=\"button\"\r\n                icon={FaChevronLeft}\r\n                onClick={() => onBack && onBack()}\r\n            />\r\n            <div className={styles.headerContent}>\r\n                {content}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nActionsHeader.propTypes = {\r\n    content: PropTypes.node.isRequired,\r\n    onBack: PropTypes.func,\r\n}\r\n","import { Fragment, useEffect, useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useTextInput from '../_shared/Inputs/hooks/useTextInput';\r\nimport FlexRow from '../_shared/Layout/FlexRow';\r\nimport { FaShoppingBag, FaTag, FaPlus } from 'react-icons/fa';\r\nimport { InlineIcon, InlineButton } from '../_shared/Layout/';\r\nimport SuggestionInput from '../_shared/Inputs/SuggestionInput';\r\nimport TextInput from '../_shared/Inputs/TextInput';\r\nimport CategoryForm from '../Categories/CategoryForm';\r\nimport ActionsHeader from '../_shared/Layout/ActionsHeader';\r\nimport { createNotification, setActionsHeight } from '../../store/actions/uiActions';\r\nimport { ADD_COMPLETE, ADD_FAILED, ADD_START, IDLE } from '../../store/statusTypes';\r\nimport { addProductAsync, setProductsStatus } from '../../store/actions/productsActions';\r\n\r\nexport default function ProductForm({ callback, initialProductName = \"\" }) {\r\n    const { products, productsStatus } = useSelector(s => s.products);\r\n    const { categories } = useSelector(s => s.categories);\r\n    const { userId } = useSelector(s => s.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const [formStep, setFormStep] = useState(0);\r\n    const productName = useTextInput(initialProductName, 1);\r\n    const categoryName = useTextInput(\"\", 1);\r\n\r\n    // On submit\r\n    useEffect(() => {\r\n        const setIdle = () => {\r\n            dispatch(setProductsStatus(IDLE))\r\n        }\r\n\r\n        if (productsStatus === ADD_FAILED) {\r\n            dispatch(createNotification(\"Det gick inte att lägga till produkten\"))\r\n            setIdle()\r\n        }\r\n        else if (productsStatus === ADD_COMPLETE) {\r\n            productName.reset();\r\n            categoryName.reset();\r\n            setIdle()\r\n        }\r\n    }, [productsStatus, dispatch])\r\n\r\n    // Resize actions when changing forms to account for header\r\n    useEffect(() => {\r\n        if (formStep === 0) {\r\n            dispatch(setActionsHeight(11));\r\n        }\r\n        else if (formStep === 1) {\r\n            dispatch(setActionsHeight(15));\r\n        }\r\n    }, [formStep, dispatch])\r\n\r\n    const onSubmit = () => {\r\n        const productError = productName.onChange(productName.value);\r\n        const categoryError = categoryName.onChange(categoryName.value);\r\n\r\n        if (productError || categoryError) {\r\n            return;\r\n        }\r\n\r\n        const categoryFound = categories.find(c => c.name.toUpperCase() === categoryName.value.toUpperCase());\r\n        const productExists = products.find(p => p.name.toUpperCase() === productName.value.toUpperCase());\r\n\r\n        if (!categoryFound) {\r\n            setFormStep(1);\r\n            return;\r\n        }\r\n        else if (productExists) {\r\n            dispatch(createNotification(\"Produkten finns redan\"));\r\n            return;\r\n        }\r\n\r\n        const addProduct = {\r\n            name: productName.value,\r\n            category: {\r\n                id: categoryFound.id,\r\n                name: categoryFound.name,\r\n                color: {\r\n                    id: categoryFound.colorId,\r\n                    hex: categoryFound.colorHex\r\n                }\r\n            }\r\n        }\r\n\r\n        dispatch(addProductAsync(userId, addProduct));\r\n    }\r\n\r\n    const saving = productsStatus === ADD_START;\r\n\r\n    return (\r\n        <Fragment>\r\n            {formStep === 0 &&\r\n                <Fragment>\r\n                    <FlexRow>\r\n                        <InlineIcon\r\n                            icon={FaShoppingBag}\r\n                            isActive={!!productName.value}\r\n                        />\r\n                        <TextInput\r\n                            {...productName}\r\n                            placeholder=\"Vad heter produkten?\"\r\n                        />\r\n                        <InlineButton\r\n                            icon={FaPlus}\r\n                            onClick={onSubmit}\r\n                            disabled={saving}\r\n                        />\r\n                    </FlexRow>\r\n\r\n                    <FlexRow>\r\n                        <InlineIcon icon={FaTag} isActive={!!categoryName.value} />\r\n                        <SuggestionInput\r\n                            {...categoryName}\r\n                            placeholder=\"Välj kategori..\"\r\n                            options={categories.map(c => c.name)}\r\n                        />\r\n                    </FlexRow>\r\n                </Fragment>\r\n            }\r\n            {formStep === 1 &&\r\n                <Fragment>\r\n                    <ActionsHeader\r\n                        content={<p>Lägg till <b>{categoryName.value}</b></p>}\r\n                        onBack={() => setFormStep(0)}\r\n                    />\r\n                    <CategoryForm\r\n                        initialCategoryName={categoryName.value}\r\n                        callback={() => setFormStep(0)}\r\n                    />\r\n                </Fragment>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nProductForm.propTypes = {\r\n    callback: PropTypes.func,\r\n    initialProductName: PropTypes.string\r\n}\r\n\r\n","import { useState, useEffect, Fragment } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ADD_START, FETCH_COMPLETE, FETCH_FAILED } from '../../store/statusTypes';\r\nimport ProductForm from '../Products/ProductForm';\r\nimport useTextInput from '../_shared/Inputs/hooks/useTextInput';\r\nimport SuggestionInput from '../_shared/Inputs/SuggestionInput';\r\nimport { FlexRow, InlineButton, InlineIcon } from '../_shared/Layout';\r\nimport ActionsHeader from '../_shared/Layout/ActionsHeader';\r\nimport { FaShoppingBag, FaComment, FaPlus } from 'react-icons/fa';\r\nimport { createNotification, setActionsHeight } from '../../store/actions/uiActions';\r\nimport { addGroceryAsync } from '../../store/actions/groceriesActions';\r\nimport TextInput from '../_shared/Inputs/TextInput';\r\n\r\nexport default function AddGroceryForm() {\r\n    const { groceries, groceriesStatus } = useSelector(s => s.groceries);\r\n    const { products } = useSelector(s => s.products);\r\n    const { userId } = useSelector(s => s.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const productName = useTextInput(\"\", 1);\r\n    const description = useTextInput();\r\n\r\n    const [formStep, setFormStep] = useState(0);\r\n\r\n    useEffect(() => {\r\n        if (formStep === 0) {\r\n            dispatch(setActionsHeight(11))\r\n        }\r\n        else if (formStep === 1) {\r\n            dispatch(setActionsHeight(15))\r\n        }\r\n    }, [formStep])\r\n\r\n    // After submit\r\n    useEffect(() => {\r\n        if (groceriesStatus === FETCH_COMPLETE) {\r\n            productName.reset();\r\n            description.reset();\r\n        }\r\n        else if (groceriesStatus === FETCH_FAILED) {\r\n            dispatch(createNotification(\"Det gick inte att lägga till varan i inköpslistan\"));\r\n        }\r\n    }, [groceriesStatus])\r\n\r\n    // Submit\r\n    const onSubmit = () => {\r\n        const productError = productName.onChange(productName.value);\r\n\r\n        if (productError) {\r\n            return;\r\n        }\r\n\r\n        const productFound = products.find(p => p.name.toUpperCase() === productName.value.toUpperCase());\r\n        const groceryExists = groceries.find(g => g.name.toUpperCase() === productName.value.toUpperCase());\r\n\r\n        if (!productFound) {\r\n            setFormStep(1);\r\n            return;\r\n        }\r\n        else if (groceryExists) {\r\n            dispatch(createNotification(\"Varan finns redan i inköpslistan\"))\r\n            return;\r\n        }\r\n\r\n        const addGrocery = {\r\n            description: description.value,\r\n            product: {\r\n                id: productFound.id,\r\n                name: productFound.name,\r\n                category: {\r\n                    id: productFound.categoryId,\r\n                    color: {\r\n                        id: productFound.colorId,\r\n                        hex: productFound.colorHex\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        dispatch(addGroceryAsync(userId, addGrocery));\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            {formStep === 0 &&\r\n                // GROCERY FORM\r\n                <Fragment>\r\n                    <FlexRow>\r\n                        <InlineIcon\r\n                            icon={FaShoppingBag}\r\n                            isActive={!!productName.value}\r\n                            hasError={!!productName.error}\r\n                        />\r\n                        <SuggestionInput\r\n                            {...productName}\r\n                            placeholder=\"Välj produkt..\"\r\n                            options={products.map(p => p.name)}\r\n                        />\r\n                        <InlineButton\r\n                            disabled={groceriesStatus === ADD_START}\r\n                            onClick={onSubmit}\r\n                            icon={FaPlus}\r\n                        />\r\n                    </FlexRow>\r\n\r\n                    <FlexRow>\r\n                        <InlineIcon\r\n                            icon={FaComment}\r\n                            isActive={!!description.value}\r\n                        />\r\n                        <TextInput\r\n                            {...description}\r\n                            placeholder=\"Kommentar (t.ex glutenfritt..)\"\r\n                        />\r\n                    </FlexRow>\r\n                </Fragment>\r\n            }\r\n            {formStep === 1 &&\r\n                // PRODUCT FORM\r\n                <Fragment>\r\n                    <ActionsHeader\r\n                        content={<p>Lägg till <b>{productName.value}</b></p>}\r\n                        onBack={() => setFormStep(0)}\r\n                    />\r\n                    <ProductForm\r\n                        initialProductName={productName.value}\r\n                        callback={() => setFormStep(0)}\r\n                    />\r\n                </Fragment>\r\n            }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteGroceryAsync } from '../../store/actions';\r\nimport ActionsContainer from '../_shared/Layout/ActionsContainer';\r\nimport usePageLayout from '../_shared/Layout/hooks/usePageLayout';\r\nimport useSearch from '../_shared/Search/hooks/useSearch';\r\nimport Search from '../_shared/Search/Search';\r\nimport SwipeableList from '../_shared/SwipeableList/SwipeableList';\r\nimport SwipeableListItem from '../_shared/SwipeableList/SwipeableListItem';\r\nimport AddGroceryForm from './AddGroceryForm';\r\n\r\nexport default function Groceries() {\r\n    const { searchActive, formActive, actionsHeight } = usePageLayout(7, 10);\r\n    const { groceries, groceriesStatus } = useSelector(s => s.groceries);\r\n    const { userId } = useSelector(s => s.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const search = useSearch(groceries);\r\n\r\n    return (\r\n        <main>\r\n            <ActionsContainer height={actionsHeight}>\r\n                {searchActive && <Search {...search.input} placeholder=\"Sök i inköpslistan..\" />}\r\n                {formActive && <AddGroceryForm />}\r\n            </ActionsContainer>\r\n\r\n            <SwipeableList>\r\n                {search.results.map(item => {\r\n                    return (\r\n                        <SwipeableListItem\r\n                            key={item.id}\r\n                            item={item}\r\n                            onLeftSwipe={() => dispatch(deleteGroceryAsync(userId, item.id))}\r\n                        />\r\n                    )\r\n                })}\r\n            </SwipeableList>\r\n        </main>\r\n    )\r\n}","import { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createNotification, setUserId, setUserStatus, signInUserAsync } from '../../../store/actions/';\r\nimport { FETCH_COMPLETE, FETCH_FAILED, IDLE } from '../../../store/statusTypes';\r\nimport useTextInput from '../../_shared/Inputs/hooks/useTextInput';\r\n\r\nexport default function useLogin(history) {\r\n    const { userStatus, userId } = useSelector(s => s.user);\r\n    const dispatch = useDispatch();\r\n    const userName = useTextInput(\"\", 1);\r\n    const [nameError, setNameError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        dispatch(setUserId(\"\"));\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        if (userStatus === FETCH_COMPLETE) {\r\n            if (userId) {\r\n                setNameError(\"\");\r\n                history.push(\"/groceries\");\r\n            }\r\n            else {\r\n                setNameError(\"Användaren hittades inte\");\r\n                setTimeout(() => setNameError(\"\"), 300);\r\n            }\r\n            dispatch(setUserStatus(IDLE));\r\n        }\r\n        else if (userStatus === FETCH_FAILED) {\r\n            dispatch(createNotification(\"Något gick fel när du skulle loggas in\"));\r\n        }\r\n\r\n    }, [userStatus, history, userId, dispatch])\r\n\r\n    const onLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        const hasErrors = userName.onChange(userName.value);\r\n\r\n        if (!hasErrors) {\r\n            signIn(userName.value);\r\n        }\r\n    }\r\n\r\n    const onAnonymousLogin = () => {\r\n        signIn(\"anonymous\")\r\n    }\r\n\r\n    const signIn = (userName) => {\r\n        dispatch(signInUserAsync(userName));\r\n    }\r\n\r\n    return {\r\n        onLogin,\r\n        onAnonymousLogin,\r\n        userName,\r\n        nameError,\r\n    }\r\n}\r\n","import useLogin from './hooks/useLogin';\r\nimport styles from './Login.module.css';\r\nimport { FaUser, FaLinkedinIn, FaGithub, FaEnvelope, FaCheck } from 'react-icons/fa';\r\nimport { TextInput } from '../_shared/Inputs/';\r\nimport { FlexRow, InlineButton, InlineIcon } from '../_shared/Layout/';\r\n\r\nexport default function Login(props) {\r\n    const { onLogin, onAnonymousLogin, userName, nameError } = useLogin(props.history);\r\n\r\n    return (\r\n        <div className={styles.login}>\r\n            {/* HEADER */}\r\n            <div className={styles.header}>\r\n                <h1 className={styles.title}>\r\n                    Inköpslistan\r\n                </h1>\r\n                <p className={styles.subTitle}>\r\n                    En enkel matapp med ungefär två användare\r\n                </p>\r\n            </div>\r\n\r\n            {/* CONTENT */}\r\n            <div className={styles.content}>\r\n                {/* LOGIN FORM */}\r\n                <form className={styles.loginForm} onSubmit={onLogin}>\r\n                    <label className={styles.label}>Fyll i ditt användarnamn</label>\r\n                    <FlexRow>\r\n                        <InlineIcon\r\n                            icon={FaUser}\r\n                            hasError={!!userName.error || !!nameError}\r\n                            isActive={!!userName.value}\r\n                        />\r\n                        <TextInput {...userName} placeholder=\"Användarnamn..\" />\r\n                        <InlineButton icon={FaCheck} />\r\n                    </FlexRow>\r\n                </form>\r\n\r\n                {/* ANONYMOUS BUTTON */}\r\n                <label className={styles.label}>Eller utforska appen</label>\r\n                <button className={styles.anonymousBtn} onClick={onAnonymousLogin}>\r\n                    Fortsätt utan att logga in\r\n                </button>\r\n            </div>\r\n\r\n            {/* FOOTER */}\r\n            <div className={styles.footer}>\r\n                <small>by Jan Mysiak</small>\r\n\r\n                <div className={styles.socialIcons}>\r\n                    <a href=\"https://www.linkedin.com/in/jan-mysiak\" target=\"_blank\" rel=\"noreferrer\">\r\n                        <FaLinkedinIn size=\"24\" />\r\n                    </a>\r\n                    <a href=\"https://github.com/jan-mysiak\" target=\"_blank\" rel=\"noreferrer\">\r\n                        <FaGithub size=\"24\" />\r\n                    </a>\r\n                    <a href=\"mailto:jan.mysiak@hotmail.com\" target=\"_blank\" rel=\"noreferrer\">\r\n                        <FaEnvelope size=\"24\" />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { deleteProductAsync } from '../../store/actions';\r\nimport ActionsContainer from '../_shared/Layout/ActionsContainer';\r\nimport usePageLayout from '../_shared/Layout/hooks/usePageLayout';\r\nimport useSearch from '../_shared/Search/hooks/useSearch';\r\nimport Search from '../_shared/Search/Search';\r\nimport { SwipeableList, SwipeableListItem } from '../_shared/SwipeableList';\r\nimport ProductForm from './ProductForm';\r\n\r\nexport default function Products() {\r\n    const { products, productsStatus } = useSelector(s => s.products);\r\n    const { userId } = useSelector(s => s.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const { searchActive, formActive } = usePageLayout(7, 11);\r\n    const search = useSearch(products);\r\n\r\n    return (\r\n        <main>\r\n            <ActionsContainer>\r\n                {searchActive && <Search {...search.input} placeholder=\"Sök bland produkter...\" />}\r\n                {formActive && <ProductForm />}\r\n            </ActionsContainer>\r\n\r\n            <SwipeableList>\r\n                {search.results.map((item, key) => {\r\n                    return (\r\n                        <SwipeableListItem\r\n                            key={item.id}\r\n                            item={item}\r\n                            onLeftSwipe={() => dispatch(deleteProductAsync(userId, item.id))}\r\n                        />\r\n                    )\r\n                })}\r\n            </SwipeableList>\r\n        </main>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Categories from './Categories/Categories'\r\nimport Groceries from './Groceries/Groceries'\r\nimport Login from './Login/Login'\r\nimport Products from './Products/Products'\r\n\r\nexport default function Routes() {\r\n    return (\r\n        <Switch>\r\n            <Route component={Groceries} path=\"/groceries\" />\r\n            <Route component={Products} path=\"/products\" />\r\n            <Route component={Categories} path=\"/categories\" />\r\n            <Route component={Login} path=\"/\" />\r\n        </Switch>\r\n    )\r\n}\r\n","import { BrowserRouter } from \"react-router-dom\";\nimport useInitializer from \"./api/hooks/useInitializer\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport Routes from \"./components/Routes\";\nimport { Notification } from \"./components/_shared/Layout/\";\n\nfunction App() {\n  const authError = useInitializer();\n\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <Navigation />\n        <Routes />\n      </BrowserRouter>\n\n      <Notification />\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport { firebaseConfig } from '../config';\r\nimport { useSelector } from 'react-redux';\r\nimport useListener from './useListener';\r\nimport { ACTION_TYPES } from '../actionTypes';\r\nimport { productConverter, groceryConverter, colorConverter, categoryConverter } from '../converters';\r\n\r\nexport default function useInitializer() {\r\n    const { userId } = useSelector(s => s.user);\r\n    const [authError, setAuthError] = useState(\"\");\r\n\r\n    // Listeners\r\n    const categoryListener = useListener(\"categories\");\r\n    const productListener = useListener(\"products\");\r\n    const colorListener = useListener(\"colors\");\r\n    const groceryListener = useListener(\"groceries\");\r\n\r\n    useEffect(() => {\r\n        const cancelListeners = () => {\r\n            colorListener.cancel();\r\n            productListener.cancel();\r\n            groceryListener.cancel();\r\n            categoryListener.cancel();\r\n        }\r\n\r\n        // Initialize app\r\n        if (!firebase.apps.length) {\r\n            firebase.initializeApp(firebaseConfig);\r\n        }\r\n\r\n        // Sign in anonymously\r\n        if (!firebase.auth().currentUser) {\r\n            firebase.auth()\r\n                .signInAnonymously()\r\n                .then(() => {\r\n                    setAuthError(\"\");\r\n                })\r\n                .catch(err => {\r\n                    console.error(err);\r\n                    setAuthError(err);\r\n                })\r\n        }\r\n\r\n        // User disconnects\r\n        if (!userId) {\r\n            cancelListeners();\r\n            return;\r\n        }\r\n\r\n        // Listen for changes\r\n        if (!categoryListener.isActive) {\r\n            categoryListener.listen(categoryConverter, ACTION_TYPES.categories, [\"name\", \"desc\"]);\r\n        }\r\n        if (!colorListener.isActive) {\r\n            colorListener.listen(colorConverter, ACTION_TYPES.colors)\r\n        }\r\n        if (!productListener.isActive) {\r\n            productListener.listen(productConverter, ACTION_TYPES.products, [\"name\", \"desc\"]);\r\n        }\r\n        if (!groceryListener.isActive) {\r\n            groceryListener.listen(groceryConverter, ACTION_TYPES.groceries, [\"product.name\", \"desc\"]);\r\n        }\r\n\r\n        // Cleanup\r\n        return () => cancelListeners();\r\n    }, [userId, productListener, groceryListener, categoryListener, colorListener]);\r\n\r\n    return authError;\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    menuActive: false,\r\n    formActive: false,\r\n    searchActive: false,\r\n    actionsHeight: 0,\r\n    // Could make this an object with timeout, type, etc..\r\n    // Currently only used to display errors\r\n    notificationMessage: \"\",\r\n}\r\n\r\nexport default function uiReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"SET_SEARCH_ACTIVE\":\r\n            return { ...state, searchActive: action.payload, formActive: false };\r\n        case \"SET_FORM_ACTIVE\":\r\n            return { ...state, formActive: action.payload, searchActive: false };\r\n        case \"SET_MENU_ACTIVE\":\r\n            return { ...state, menuActive: action.payload };\r\n        case \"SET_ACTIONS_HEIGHT\":\r\n            return { ...state, actionsHeight: action.payload };\r\n        case \"SET_NOTIFICATION\":\r\n            return { ...state, notificationMessage: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { IDLE } from \"../statusTypes\";\r\n\r\nconst initialState = {\r\n    userId: \"\",\r\n    userStatus: IDLE,\r\n}\r\n\r\nexport default function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"SET_USER_ID\":\r\n            return { ...state, userId: action.payload };\r\n        case \"SET_USER_STATUS\":\r\n            return { ...state, userStatus: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { IDLE } from \"../statusTypes\";\r\n\r\nconst initialState = {\r\n    categories: [],\r\n    categoriesStatus: IDLE,\r\n}\r\n\r\nexport default function categoriesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"SET_CATEGORIES\":\r\n            return { ...state, categories: action.payload };\r\n        case \"ADD_CATEGORY\":\r\n            return { ...state, categories: [action.payload, ...state.categories] };\r\n        case \"UPDATE_CATEGORY\":\r\n            return {\r\n                ...state,\r\n                categories: state.categories.map(c =>\r\n                    (c.id === action.payload.id ? Object.assign({}, c, action.payload) : c)\r\n                )\r\n            }\r\n        case \"DELETE_CATEGORY\":\r\n            return { ...state, categories: state.categories.filter(c => c.id !== action.payload) };\r\n        case \"SET_CATEGORIES_STATUS\":\r\n            return { ...state, categoriesStatus: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { IDLE } from \"../statusTypes\";\r\n\r\nconst initialState = {\r\n    products: [],\r\n    productsStatus: IDLE\r\n}\r\n\r\nexport default function productsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"SET_PRODUCTS\":\r\n            return { ...state, products: action.payload };\r\n        case \"ADD_PRODUCT\":\r\n            return { ...state, products: [action.payload, ...state.products] };\r\n        case \"DELETE_PRODUCT\":\r\n            return { ...state, products: state.products.filter(g => g.id !== action.payload) };\r\n        case \"SET_PRODUCTS_STATUS\":\r\n            return { ...state, productsStatus: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { IDLE } from \"../statusTypes\";\r\n\r\nconst initialState = {\r\n    groceries: [],\r\n    groceriesStatus: IDLE\r\n}\r\n\r\nexport default function groceriesReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"SET_GROCERIES\":\r\n            return { ...state, groceries: action.payload };\r\n        case \"ADD_GROCERY\":\r\n            return { ...state, groceries: [action.payload, ...state.groceries] };\r\n        case \"DELETE_GROCERY\":\r\n            return { ...state, groceries: state.groceries.filter(g => g.id !== action.payload) };\r\n        case \"SET_GROCERIES_STATUS\":\r\n            return { ...state, groceriesStatus: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { IDLE } from \"../statusTypes\";\r\n\r\nconst initialState = {\r\n    colors: [],\r\n    colorsStatus: IDLE\r\n}\r\n\r\nexport default function colorsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case \"SET_COLORS\":\r\n            return { ...state, colors: action.payload };\r\n        case \"ADD_COLOR\":\r\n            return { ...state, colors: [action.payload, ...state.colors] };\r\n        case \"UPDATE_COLOR\":\r\n            return {\r\n                ...state,\r\n                colors: state.colors.map(c =>\r\n                    (c.id === action.payload.id ? Object.assign({}, c, action.payload) : c)\r\n                )\r\n            }\r\n        case \"SET_COLORS_STATUS\":\r\n            return { ...state, colorsStatus: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { categoriesReducer, colorsReducer, groceriesReducer, productsReducer, uiReducer, userReducer } from './reducers/';\r\n\r\nconst rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    user: userReducer,\r\n    groceries: groceriesReducer,\r\n    products: productsReducer,\r\n    categories: categoriesReducer,\r\n    colors: colorsReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './store/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"SwipeableList_list__8qAVY\",\"placeholder\":\"SwipeableList_placeholder__v1One\",\"listItem\":\"SwipeableList_listItem__2g1w7\",\"listItem_remove\":\"SwipeableList_listItem_remove__2JCjT SwipeableList_listItem__2g1w7\",\"content\":\"SwipeableList_content__3oS2i\",\"content_active\":\"SwipeableList_content_active__2Ipi7 SwipeableList_content__3oS2i\",\"content_reset\":\"SwipeableList_content_reset__3jyLl SwipeableList_content__3oS2i\",\"description\":\"SwipeableList_description__2CLIR\",\"categoryColor\":\"SwipeableList_categoryColor__L5GzO\",\"bg\":\"SwipeableList_bg__zNP3x\",\"bg_left\":\"SwipeableList_bg_left__1tz7s SwipeableList_bg__zNP3x\",\"bg_right\":\"SwipeableList_bg_right__XMiiP SwipeableList_bg__zNP3x\",\"bgIcon\":\"SwipeableList_bgIcon__3uWQm\",\"bgText\":\"SwipeableList_bgText__2lPGz\",\"bgIcon_wobble\":\"SwipeableList_bgIcon_wobble__1PfyK SwipeableList_bgIcon__3uWQm\",\"wobble\":\"SwipeableList_wobble__1ho09\"};"],"sourceRoot":""}